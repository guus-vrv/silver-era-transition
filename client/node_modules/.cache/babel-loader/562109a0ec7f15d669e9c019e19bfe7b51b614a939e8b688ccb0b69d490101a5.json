{"ast":null,"code":"var _jsxFileName = \"/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Inbox.js\",\n  _s = $RefreshSig$();\n// components/GroupChat.js\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from './Auth/AxiosInstance';\nimport { useNavigate } from 'react-router-dom';\nimport GroupChat from './GroupChat';\nimport './styles/Inbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL; // Your API base URL\n\nconst Inbox = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const navigate = useNavigate();\n  const [messageContent, setMessageContent] = useState('');\n  const userId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  // Fetch messages when the component mounts or when the groupId changes\n\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroups(response.data); // Set messages to state\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const handleViewGroup = groupId => {\n    navigate(`/group-chat/${groupId}`);\n  };\n\n  // Send a message to the group chat\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-chats-grid\",\n    children: groups.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants-pictures\",\n        children: chat.participants.map(participant => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`,\n            alt: `${participant.name}'s profile`,\n            className: \"participant-picture\"\n          }, participant.userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-chat-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Participants:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }, this), \" \", chat.participants.map(p => {\n            return p.userId === userId ? 'You' : p.userDetails.name;\n          }).join(', ') // Join the array of names into a string\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-group-button\",\n        onClick: () => handleViewGroup(chat.chatId),\n        children: \"View Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, chat.chatId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Inbox, \"rGh31REwOUbhdYgT0l5P+z/U5yw=\", false, function () {\n  return [useNavigate];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","useNavigate","GroupChat","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","Inbox","_s","groups","setGroups","navigate","messageContent","setMessageContent","userId","localStorage","getItem","fetchGroups","response","get","data","error","console","handleViewGroup","groupId","className","children","map","chat","participants","participant","src","profile","profilePicture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","p","userDetails","join","onClick","chatId","_c","$RefreshReg$"],"sources":["/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Inbox.js"],"sourcesContent":["// components/GroupChat.js\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from './Auth/AxiosInstance';\nimport { useNavigate } from 'react-router-dom';\nimport GroupChat from './GroupChat';\nimport './styles/Inbox.css';\n\nconst API_URL = process.env.REACT_APP_API_URL; // Your API base URL\n\nconst Inbox = () => {\n  const [groups, setGroups] = useState([]);\n  const navigate = useNavigate();\n  const [messageContent, setMessageContent] = useState('');\n\n  const userId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  // Fetch messages when the component mounts or when the groupId changes\n\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroups(response.data); // Set messages to state\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const handleViewGroup = (groupId) => {\n    navigate(`/group-chat/${groupId}`);\n  };\n\n  // Send a message to the group chat\n\n  return (\n    <div className=\"group-chats-grid\">\n    {groups.map((chat) => (\n      <div key={chat.chatId} className=\"group-chat-card\">\n        <div className=\"participants-pictures\">\n          {chat.participants.map((participant) => {\n            return (\n            <img \n              key={participant.userId} \n              src={participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`}\n              alt={`${participant.name}'s profile`} \n              className=\"participant-picture\"\n            />\n          );\n        })}\n        </div>\n        <div className=\"group-chat-info\">\n          <p><strong>Participants:</strong> {\n            \n          chat.participants.map(p => {\n            return p.userId === userId ? 'You' : p.userDetails.name;\n          }).join(', ') // Join the array of names into a string\n          }</p>\n        </div>\n        <button \n          className=\"view-group-button\" \n          onClick={() => handleViewGroup(chat.chatId)}\n        >\n          View Group\n        </button>\n      </div>\n    ))}\n  </div>\n  );\n};\n\nexport default Inbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}