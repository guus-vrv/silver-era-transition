{"ast":null,"code":"var _jsxFileName = \"/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/GroupChat.js\",\n  _s = $RefreshSig$();\n// components/GroupChat.js\n\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\nimport axiosInstance from './Auth/AxiosInstance';\nimport './styles/GroupChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL; // Your API base URL\n\nconst GroupChat = ({\n  groupChatId\n}) => {\n  _s();\n  const params = useParams();\n  const groupId = groupChatId || params.groupId;\n  const navigate = useNavigate();\n  const [participants, setParticipants] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [messageContent, setMessageContent] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const userId = localStorage.getItem('userId');\n  const role = localStorage.getItem('role');\n  const fetchGroupData = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/group/${groupId}`);\n      setParticipants(response.data.participants);\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  useEffect(() => {\n    fetchGroupData();\n  }, [groupId]);\n  const sendMessage = async () => {\n    if (!messageContent.trim() && !selectedFile) return;\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      console.log('formData', formData);\n      console.log('selectedFile', selectedFile);\n      try {\n        await axiosInstance.post(`${API_URL}/api/groupchat/${groupId}/message`, {\n          message: messageContent.trim(),\n          file: formData,\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setMessageContent('');\n        setSelectedFile(null);\n        fetchGroupData();\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    } else {\n      try {\n        await axiosInstance.post(`${API_URL}/api/groupchat/${groupId}/message`, {\n          message: messageContent.trim()\n        });\n        setMessageContent('');\n        setSelectedFile(null);\n        fetchGroupData();\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    }\n  };\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const getSenderDetails = senderId => {\n    const sender = participants.find(participant => participant.userId === senderId);\n    return sender;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants\",\n        children: participants.map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participant\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`,\n            alt: participant.userDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: participant.userDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, participant.userId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map(msg => {\n          const senderDetails = getSenderDetails(msg.sender);\n          const senderName = msg.sender === userId ? 'You' : senderDetails.userDetails.name;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [senderName, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), !msg.filename ? msg.message : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" msg.message\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `${API_URL}/${msg.path}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: msg.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: new Date(msg.createdAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, msg._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: messageContent,\n        onChange: e => setMessageContent(e.target.value),\n        placeholder: \"Type your message...\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupChat, \"wJgc72aP/jAAFNhn+3KCSdw/V58=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useNavigate","useParams","axiosInstance","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","GroupChat","groupChatId","_s","params","groupId","navigate","participants","setParticipants","messages","setMessages","messageContent","setMessageContent","selectedFile","setSelectedFile","userId","localStorage","getItem","role","fetchGroupData","response","get","data","error","console","sendMessage","trim","formData","FormData","append","log","post","message","file","headers","handleFileChange","e","target","files","getSenderDetails","senderId","sender","find","participant","className","children","map","src","profile","profilePicture","alt","userDetails","name","fileName","_jsxFileName","lineNumber","columnNumber","msg","senderDetails","senderName","filename","href","path","rel","Date","createdAt","toLocaleTimeString","_id","value","onChange","placeholder","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/GroupChat.js"],"sourcesContent":["// components/GroupChat.js\n\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\nimport axiosInstance from './Auth/AxiosInstance';\nimport './styles/GroupChat.css';\n\nconst API_URL = process.env.REACT_APP_API_URL; // Your API base URL\n\nconst GroupChat = ({ groupChatId }) => {\n  const params = useParams();\n  const groupId = groupChatId || params.groupId;\n  const navigate = useNavigate();\n\n  const [participants, setParticipants] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [messageContent, setMessageContent] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const userId = localStorage.getItem('userId');\n  const role = localStorage.getItem('role');\n\n  const fetchGroupData = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/group/${groupId}`);\n      setParticipants(response.data.participants);\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroupData();\n  }, [groupId]);\n\n  const sendMessage = async () => {\n    if (!messageContent.trim() && !selectedFile) return;\n\n    if (selectedFile)\n    {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      console.log('formData', formData);\n      console.log('selectedFile', selectedFile);\n\n      try {\n        await axiosInstance.post(`${API_URL}/api/groupchat/${groupId}/message`, {\n          message: messageContent.trim(),\n          file: formData,\n          headers: { 'Content-Type': 'multipart/form-data' }\n        });\n        setMessageContent('');\n        setSelectedFile(null);\n        fetchGroupData();\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    }\n\n    else\n    {\n      try {\n        await axiosInstance.post(`${API_URL}/api/groupchat/${groupId}/message`, {\n          message: messageContent.trim(),\n        });\n        setMessageContent('');\n        setSelectedFile(null);\n        fetchGroupData();\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    }\n    \n  };\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const getSenderDetails = (senderId) => {\n    const sender = participants.find((participant) => participant.userId === senderId);\n    return sender;\n  };\n\n  return (\n    <div className=\"group-chat\">\n      <div className=\"chat-container\">\n        <div className=\"participants\">\n          {participants.map((participant) => (\n            <div key={participant.userId} className=\"participant\">\n              <img\n                src={participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`}\n                alt={participant.userDetails.name}\n              />\n              <span>{participant.userDetails.name}</span>\n            </div>\n          ))}\n        </div>\n        <div className=\"message-list\">\n          {messages.map((msg) => {\n            const senderDetails = getSenderDetails(msg.sender);\n            const senderName = msg.sender === userId ? 'You' : senderDetails.userDetails.name;\n            return (\n              <div key={msg._id} className=\"message\">\n                <strong>{senderName}: </strong>\n                {!msg.filename ? msg.message :  ( <div> msg.message\n                  <a href={`${API_URL}/${msg.path}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {msg.filename}\n                  </a>\n                  </div>\n                )}\n                <span className=\"timestamp\">{new Date(msg.createdAt).toLocaleTimeString()}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"message-input\">\n        <textarea\n          value={messageContent}\n          onChange={(e) => setMessageContent(e.target.value)}\n          placeholder=\"Type your message...\"\n          rows=\"3\"\n        />\n        <input type=\"file\" onChange={handleFileChange} className=\"file-input\" />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n      \n\n    </div>\n  );\n};\n\nexport default GroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}