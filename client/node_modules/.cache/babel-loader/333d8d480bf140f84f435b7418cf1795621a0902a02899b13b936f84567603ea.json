{"ast":null,"code":"var _jsxFileName = \"/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Brokers/SelectGroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport axiosInstance from '../Auth/AxiosInstance'; // Assuming AxiosInstance is set up for authenticated requests\nimport { jwtDecode as jwt_decode } from 'jwt-decode'; // if you want to keep calling it jwt_decode\nimport '../BuyersSellers/styles/ProfilesDisplay.css';\nimport { castObject } from '../../../../models/GroupChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL; // Access the base URL from environment variable\n\nconst SelectGroupChat = () => {\n  _s();\n  var _location$state, _location$state2;\n  const [groupChats, setGroupChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {\n    roomNumber\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const brokerId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  const loc_groupChat = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.groupChat) || \"\";\n  const loc_profilesToAdd = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.profilesToAdd) || [];\n  useEffect(() => {\n    if (loc_groupChat) {\n      setSelectedChat(loc_groupChat);\n    }\n  }, []);\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroupChats(response.data); // Set messages to state\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const submitChoice = groupChat => {\n    setSelectedChat(groupChat);\n    navigate(`/add-room/${roomNumber}`, {\n      state: {\n        groupChat: groupChat,\n        profilesToAdd: loc_profilesToAdd\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(`/add-room/${roomNumber}`, {\n        state: {\n          groupChat: selectedChat,\n          profilesToAdd: loc_profilesToAdd\n        }\n      }),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-chats-grid\",\n      children: groupChats.map(chat => {\n        const hasMatchingProfile = chat.participants.some(participant => loc_profilesToAdd.some(profile => profile === participant.userId));\n        if (hasMatchingProfile) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-chat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participants-pictures\",\n              children: chat.participants.map(participant => {\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`,\n                  alt: `${participant.name}'s profile`,\n                  className: \"participant-picture\"\n                }, participant.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-chat-info\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Participants:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 24\n                }, this), \" \", chat.participants.map(p => {\n                  return p.userId === brokerId ? 'You' : p.userDetails.name;\n                }).join(', ') // Join the array of names into a string\n                ]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), selectedChat === chat.chatId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-group-button\",\n              style: {\n                backgroundColor: 'red'\n              },\n              children: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-group-button\",\n              onClick: () => submitChoice(chat.chatId),\n              children: \"Choose Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 34\n            }, this)]\n          }, chat.chatId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-group-button\",\n        style: {\n          backgroundColor: 'green'\n        },\n        onClick: () => navigate(`/${roomNumber}/select-chat-profiles`, {\n          state: {\n            groupChat: loc_groupChat,\n            profilesToAdd: loc_profilesToAdd\n          }\n        }),\n        children: \"Create New Group Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectGroupChat, \"1bFWHuQFIrjJhd5Dj0zvKJmZ55A=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = SelectGroupChat;\nexport default SelectGroupChat;\nvar _c;\n$RefreshReg$(_c, \"SelectGroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useLocation","axiosInstance","jwtDecode","jwt_decode","castObject","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SelectGroupChat","_s","_location$state","_location$state2","groupChats","setGroupChats","selectedChat","setSelectedChat","roomNumber","navigate","location","brokerId","localStorage","getItem","loc_groupChat","state","groupChat","loc_profilesToAdd","profilesToAdd","fetchGroups","response","get","data","error","console","submitChoice","style","display","flexDirection","justifyContent","alignItems","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","hasMatchingProfile","participants","some","participant","profile","userId","src","profilePicture","alt","name","p","userDetails","join","chatId","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Brokers/SelectGroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport axiosInstance from '../Auth/AxiosInstance'; // Assuming AxiosInstance is set up for authenticated requests\nimport { jwtDecode as jwt_decode } from 'jwt-decode'; // if you want to keep calling it jwt_decode\nimport '../BuyersSellers/styles/ProfilesDisplay.css';\nimport { castObject } from '../../../../models/GroupChat';\n\nconst API_URL = process.env.REACT_APP_API_URL; // Access the base URL from environment variable\n\nconst SelectGroupChat = () => {\n\n  const [groupChats, setGroupChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {roomNumber} = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const brokerId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  const loc_groupChat = location.state?.groupChat || \"\";\n  const loc_profilesToAdd = location.state?.profilesToAdd || [];\n\n  useEffect(() => {\n    if (loc_groupChat)\n    {\n        setSelectedChat(loc_groupChat);\n    }\n    \n  }, []);\n\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroupChats(response.data); // Set messages to state\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const submitChoice = (groupChat) => {\n    setSelectedChat(groupChat);\n    navigate(`/add-room/${roomNumber}`, { state: { groupChat: groupChat, profilesToAdd: loc_profilesToAdd } });\n  }\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n      <button className='back-button' onClick={() => navigate(`/add-room/${roomNumber}`, {state: {groupChat: selectedChat, profilesToAdd: loc_profilesToAdd}})}>Back</button>\n\n        <div className=\"group-chats-grid\">\n\n    {groupChats.map((chat) => {\n        const hasMatchingProfile = chat.participants.some(participant => \n          loc_profilesToAdd.some(profile => profile === participant.userId)\n        );\n\n        if (hasMatchingProfile) {\n          return (  <div key={chat.chatId} className=\"group-chat-card\">\n                <div className=\"participants-pictures\">\n                {chat.participants.map((participant) => {\n                    return (\n                    <img \n                      key={participant.userId} \n                      src={participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`}\n                      alt={`${participant.name}'s profile`} \n                      className=\"participant-picture\"\n                    />\n                  );\n                })}\n                \n            \n                </div>\n                <div className=\"group-chat-info\">\n                    <p><strong>Participants:</strong> {\n                        \n                        chat.participants.map(p => {\n                          return p.userId === brokerId ? 'You' : p.userDetails.name;\n                        }).join(', ') // Join the array of names into a string\n                        }\n                        \n                    </p>\n\n                </div>\n                {selectedChat === chat.chatId ? (<button className=\"view-group-button\" style={{backgroundColor: 'red'}}>\n                      Selected\n                  </button> ) : (<button \n                  className=\"view-group-button\" \n                  onClick={() => submitChoice(chat.chatId)}\n                >\n                  Choose Group\n                </button>\n                )}\n              </div>\n\n\n\n          )}})}\n\n          \n\n        </div>\n\n        <div>\n\n                <button \n                            className=\"view-group-button\" \n                            style={{backgroundColor: 'green'}}\n                            onClick={() => navigate(`/${roomNumber}/select-chat-profiles`, {state: {groupChat: loc_groupChat, profilesToAdd: loc_profilesToAdd}})}\n                          >\n                            Create New Group Chat\n\n                          </button>\n          </div>\n    \n    </div>\n    \n  );\n};\n\nexport default SelectGroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}