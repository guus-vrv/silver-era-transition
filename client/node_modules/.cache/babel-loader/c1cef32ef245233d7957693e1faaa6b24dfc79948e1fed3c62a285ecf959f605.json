{"ast":null,"code":"var _jsxFileName = \"/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Brokers/SelectGroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport axiosInstance from '../Auth/AxiosInstance'; // Assuming AxiosInstance is set up for authenticated requests\nimport { jwtDecode as jwt_decode } from 'jwt-decode'; // if you want to keep calling it jwt_decode\nimport '../BuyersSellers/styles/ProfilesDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL; // Access the base URL from environment variable\n\nconst SelectGroupChat = () => {\n  _s();\n  var _location$state, _location$state2;\n  const [groupChats, setGroupChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {\n    roomNumber\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const brokerId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  const loc_groupChat = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.groupChat) || \"\";\n  const loc_profilesToAdd = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.profilesToAdd) || [];\n  console.log('loc_profilesToAdd', loc_profilesToAdd);\n  useEffect(() => {\n    if (loc_groupChat) {\n      setSelectedChat(loc_groupChat);\n    }\n  }, []);\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroupChats(response.data); // Set messages to state\n      console.log('Groepen', response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const submitChoice = groupChat => {\n    setSelectedChat(groupChat);\n    navigate(`/add-room/${roomNumber}`, {\n      state: {\n        groupChat: groupChat,\n        profilesToAdd: loc_profilesToAdd\n      }\n    });\n  };\n  const createNewGroupChat = () => {\n    console.log(\"ik geef niet toe aan twijfel, ik geef niet toe aan belang, en zelfs al verlies ik - geen probleen\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(`/add-room/${roomNumber}`, {\n        state: {\n          groupChat: selectedChat,\n          profilesToAdd: loc_profilesToAdd\n        }\n      }),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-chats-grid\",\n      children: groupChats.map(chat => chat.participants.map(participant => loc_profilesToAdd.includes(participant.userId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-chat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participants-pictures\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`,\n            alt: `${participant.name}'s profile`,\n            className: \"participant-picture\"\n          }, participant.userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-chat-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Participants:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 24\n            }, this), \" \", chat.participants.map(p => {\n              return p.userId === brokerId ? 'You' : p.userDetails.name;\n            }).join(', ') // Join the array of names into a string\n            ]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), selectedChat === chat.chatId ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-group-button\",\n          style: {\n            backgroundColor: 'red'\n          },\n          children: \"Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-group-button\",\n          onClick: () => submitChoice(chat.chatId),\n          children: \"Choose Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 34\n        }, this)]\n      }, chat.chatId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectGroupChat, \"1bFWHuQFIrjJhd5Dj0zvKJmZ55A=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = SelectGroupChat;\nexport default SelectGroupChat;\nvar _c;\n$RefreshReg$(_c, \"SelectGroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useLocation","axiosInstance","jwtDecode","jwt_decode","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SelectGroupChat","_s","_location$state","_location$state2","groupChats","setGroupChats","selectedChat","setSelectedChat","roomNumber","navigate","location","brokerId","localStorage","getItem","loc_groupChat","state","groupChat","loc_profilesToAdd","profilesToAdd","console","log","fetchGroups","response","get","data","error","submitChoice","createNewGroupChat","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","participants","participant","includes","userId","src","profile","profilePicture","alt","name","p","userDetails","join","chatId","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Brokers/SelectGroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport axiosInstance from '../Auth/AxiosInstance'; // Assuming AxiosInstance is set up for authenticated requests\nimport { jwtDecode as jwt_decode } from 'jwt-decode'; // if you want to keep calling it jwt_decode\nimport '../BuyersSellers/styles/ProfilesDisplay.css';\n\nconst API_URL = process.env.REACT_APP_API_URL; // Access the base URL from environment variable\n\nconst SelectGroupChat = () => {\n\n  const [groupChats, setGroupChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {roomNumber} = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const brokerId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  const loc_groupChat = location.state?.groupChat || \"\";\n  const loc_profilesToAdd = location.state?.profilesToAdd || [];\n\n  console.log('loc_profilesToAdd', loc_profilesToAdd);\n\n  useEffect(() => {\n    if (loc_groupChat)\n    {\n        setSelectedChat(loc_groupChat);\n    }\n    \n  }, []);\n\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroupChats(response.data); // Set messages to state\n      console.log('Groepen', response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const submitChoice = (groupChat) => {\n    setSelectedChat(groupChat);\n    navigate(`/add-room/${roomNumber}`, { state: { groupChat: groupChat, profilesToAdd: loc_profilesToAdd } });\n  }\n\n  const createNewGroupChat = () => {\n    console.log(\"ik geef niet toe aan twijfel, ik geef niet toe aan belang, en zelfs al verlies ik - geen probleen\")\n  }\n\n  return (\n    <div>\n      <button className='back-button' onClick={() => navigate(`/add-room/${roomNumber}`, {state: {groupChat: selectedChat, profilesToAdd: loc_profilesToAdd}})}>Back</button>\n\n        <div className=\"group-chats-grid\">\n    {groupChats.map((chat) => (\n  \n    chat.participants.map((participant) => loc_profilesToAdd.includes(participant.userId) && (\n\n        <div key={chat.chatId} className=\"group-chat-card\">\n                <div className=\"participants-pictures\">\n  \n                    <img \n                      key={participant.userId} \n                      src={participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`}\n                      alt={`${participant.name}'s profile`} \n                      className=\"participant-picture\"\n                    />\n                \n            \n                </div>\n                <div className=\"group-chat-info\">\n                    <p><strong>Participants:</strong> {\n                        \n                        chat.participants.map(p => {\n                          return p.userId === brokerId ? 'You' : p.userDetails.name;\n                        }).join(', ') // Join the array of names into a string\n                        }\n                        \n                    </p>\n\n                </div>\n                {selectedChat === chat.chatId ? (<button className=\"view-group-button\" style={{backgroundColor: 'red'}}>\n                      Selected\n                  </button> ) : (<button \n                  className=\"view-group-button\" \n                  onClick={() => submitChoice(chat.chatId)}\n                >\n                  Choose Group\n                </button>\n                )}\n              </div>\n\n\n    )\n      \n          )))}\n\n        </div>\n    \n    </div>\n    \n  );\n};\n\nexport default SelectGroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}