{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create();\n\n// Add a request interceptor to automatically include the token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = token; // No need to prepend 'Bearer' again\n  }\n  console.log('Config', config);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(response => {\n  return response; // Return response if status is not 401\n}, error => {\n  if (error.response && error.response.status === 401) {\n    console.log('Unauthorized: Redirecting to login page');\n    window.location.href = '/login'; // Redirect to login page\n  }\n  return Promise.reject(error); // Reject the error to handle it later if needed\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","interceptors","request","use","config","token","localStorage","getItem","headers","console","log","error","Promise","reject","response","status","window","location","href"],"sources":["/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Auth/AxiosInstance.js"],"sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create();\n\n// Add a request interceptor to automatically include the token\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = token; // No need to prepend 'Bearer' again\n    }\n    console.log('Config', config);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n      return response; // Return response if status is not 401\n  },\n  (error) => {\n      if (error.response && error.response.status === 401) {\n          console.log('Unauthorized: Redirecting to login page');\n          window.location.href = '/login'; // Redirect to login page\n      }\n      return Promise.reject(error); // Reject the error to handle it later if needed\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC;;AAEpC;AACAD,aAAa,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAGH,KAAK,CAAC,CAAC;EAC3C;EACAI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,MAAM,CAAC;EAC7B,OAAOA,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDZ,aAAa,CAACE,YAAY,CAACa,QAAQ,CAACX,GAAG,CACpCW,QAAQ,IAAK;EACV,OAAOA,QAAQ,CAAC,CAAC;AACrB,CAAC,EACAH,KAAK,IAAK;EACP,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjDN,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACtDM,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;EACrC;EACA,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;AAClC,CACF,CAAC;AAED,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}