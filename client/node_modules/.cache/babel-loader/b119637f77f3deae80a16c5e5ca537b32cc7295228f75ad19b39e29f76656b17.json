{"ast":null,"code":"var _jsxFileName = \"/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Brokers/SelectGroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport axiosInstance from '../Auth/AxiosInstance'; // Assuming AxiosInstance is set up for authenticated requests\nimport { jwtDecode as jwt_decode } from 'jwt-decode'; // if you want to keep calling it jwt_decode\nimport '../BuyersSellers/styles/ProfilesDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL; // Access the base URL from environment variable\n\nconst SelectGroupChat = () => {\n  _s();\n  var _location$state, _location$state2;\n  const [groupChats, setGroupChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {\n    roomNumber\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const brokerId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  const loc_groupChat = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.groupChat;\n  const loc_profilesToAdd = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.profilesToAdd;\n  console.log('loc_profilesToAdd', loc_profilesToAdd);\n  useEffect(() => {\n    if (loc_groupChat) {\n      setSelectedChat(loc_groupChat);\n    }\n  }, []);\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroupChats(response.data); // Set messages to state\n      console.log('Groepen', response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const submitChoice = groupChat => {\n    setSelectedChat(groupChat);\n    navigate(`/add-room/${roomNumber}`, {\n      state: {\n        groupChat: groupChat,\n        profilesToAdd: loc_profilesToAdd\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(`/add-room/${roomNumber}`, {\n        state: {\n          groupChat: selectedChat,\n          profilesToAdd: loc_profilesToAdd\n        }\n      }),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-chats-grid\",\n      children: groupChats.map(chat =>\n      /*#__PURE__*/\n      //(chat.participants.map((p) => {loc_profilesToAdd.includes(p.userId)}))\n      _jsxDEV(\"div\", {\n        className: \"group-chat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participants-pictures\",\n          children: chat.participants.map(participant => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`,\n              alt: `${participant.name}'s profile`,\n              className: \"participant-picture\"\n            }, participant.userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-chat-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Participants:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 14\n            }, this), \" \", chat.participants.map(p => {\n              return p.userId === brokerId ? 'You' : p.userDetails.name;\n            }).join(', ') // Join the array of names into a string\n            ]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), selectedChat === chat.chatId ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-group-button\",\n          style: {\n            backgroundColor: 'red'\n          },\n          children: \"Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-group-button\",\n          onClick: () => submitChoice(chat.chatId),\n          children: \"Choose Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this)]\n      }, chat.chatId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectGroupChat, \"1bFWHuQFIrjJhd5Dj0zvKJmZ55A=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = SelectGroupChat;\nexport default SelectGroupChat;\nvar _c;\n$RefreshReg$(_c, \"SelectGroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useLocation","axiosInstance","jwtDecode","jwt_decode","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SelectGroupChat","_s","_location$state","_location$state2","groupChats","setGroupChats","selectedChat","setSelectedChat","roomNumber","navigate","location","brokerId","localStorage","getItem","loc_groupChat","state","groupChat","loc_profilesToAdd","profilesToAdd","console","log","fetchGroups","response","get","data","error","submitChoice","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","participants","participant","src","profile","profilePicture","alt","name","userId","p","userDetails","join","chatId","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Brokers/SelectGroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport axiosInstance from '../Auth/AxiosInstance'; // Assuming AxiosInstance is set up for authenticated requests\nimport { jwtDecode as jwt_decode } from 'jwt-decode'; // if you want to keep calling it jwt_decode\nimport '../BuyersSellers/styles/ProfilesDisplay.css';\n\nconst API_URL = process.env.REACT_APP_API_URL; // Access the base URL from environment variable\n\nconst SelectGroupChat = () => {\n\n  const [groupChats, setGroupChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {roomNumber} = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const brokerId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  const loc_groupChat = location.state?.groupChat\n  const loc_profilesToAdd = location.state?.profilesToAdd;\n\n  console.log('loc_profilesToAdd', loc_profilesToAdd);\n\n  useEffect(() => {\n    if (loc_groupChat)\n    {\n        setSelectedChat(loc_groupChat);\n    }\n    \n  }, []);\n\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroupChats(response.data); // Set messages to state\n      console.log('Groepen', response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const submitChoice = (groupChat) => {\n    setSelectedChat(groupChat);\n    navigate(`/add-room/${roomNumber}`, { state: { groupChat: groupChat, profilesToAdd: loc_profilesToAdd } });\n  }\n\n\n  return (\n    <div>\n      <button className='back-button' onClick={() => navigate(`/add-room/${roomNumber}`, {state: {groupChat: selectedChat, profilesToAdd: loc_profilesToAdd}})}>Back</button>\n\n        <div className=\"group-chats-grid\">\n\n    {groupChats.map((chat) => (\n    \n      //(chat.participants.map((p) => {loc_profilesToAdd.includes(p.userId)}))\n      <div key={chat.chatId} className=\"group-chat-card\">\n        <div className=\"participants-pictures\">\n          {chat.participants.map((participant) => {\n            return (\n            <img \n              key={participant.userId} \n              src={participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`}\n              alt={`${participant.name}'s profile`} \n              className=\"participant-picture\"\n            />\n          );\n        })}\n        </div>\n        <div className=\"group-chat-info\">\n          <p><strong>Participants:</strong> {\n            \n          chat.participants.map(p => {\n            return p.userId === brokerId ? 'You' : p.userDetails.name;\n          }).join(', ') // Join the array of names into a string\n          }</p>\n        </div>\n        {selectedChat === chat.chatId ? (<button className=\"view-group-button\" style={{backgroundColor: 'red'}}>\n              Selected\n          </button> ) : (<button \n          className=\"view-group-button\" \n          onClick={() => submitChoice(chat.chatId)}\n        >\n          Choose Group\n        </button>)}\n        \n      </div>\n    ))}\n\n        </div>\n    \n    </div>\n    \n  );\n};\n\nexport default SelectGroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}