{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate,useParams,useLocation}from'react-router-dom';// Import useHistory from react-router-dom\nimport axiosInstance from'../Auth/AxiosInstance';// Assuming AxiosInstance is set up for authenticated requests\nimport{jwtDecode as jwt_decode}from'jwt-decode';// if you want to keep calling it jwt_decode\nimport'../BuyersSellers/styles/ProfilesDisplay.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL;// Access the base URL from environment variable\nconst SelectGroupChat=()=>{var _location$state,_location$state2;const[groupChats,setGroupChats]=useState([]);const[selectedChat,setSelectedChat]=useState(null);const{roomNumber}=useParams();const navigate=useNavigate();const location=useLocation();const brokerId=localStorage.getItem('userId');// Make sure this key matches where you store the user ID\nconst loc_groupChat=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.groupChat)||\"\";const loc_profilesToAdd=((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.profilesToAdd)||[];useEffect(()=>{if(loc_groupChat){setSelectedChat(loc_groupChat);}},[]);const fetchGroups=async()=>{try{const response=await axiosInstance.get(`${API_URL}/api/groupchat/groups`);setGroupChats(response.data);// Set messages to state\n}catch(error){console.error('Error fetching messages:',error);}};useEffect(()=>{fetchGroups();// Initial fetch\n},[]);// Run effect when groupId changes\nconst submitChoice=groupChat=>{setSelectedChat(groupChat);navigate(`/add-room/${roomNumber}`,{state:{groupChat:groupChat,profilesToAdd:loc_profilesToAdd}});};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate(`/add-room/${roomNumber}`,{state:{groupChat:selectedChat,profilesToAdd:loc_profilesToAdd}}),children:\"Back\"}),/*#__PURE__*/_jsx(\"div\",{className:\"group-chats-grid\",children:groupChats.map(chat=>{const hasMatchingProfile=chat.participants.some(participant=>loc_profilesToAdd.some(profile=>profile===participant.userId));if(hasMatchingProfile){return/*#__PURE__*/_jsxs(\"div\",{className:\"group-chat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"participants-pictures\",children:chat.participants.map(participant=>{return/*#__PURE__*/_jsx(\"img\",{src:participant.profile.profilePicture?`${API_URL}${participant.profile.profilePicture}`:`${API_URL}/uploads/broker.png`,alt:`${participant.name}'s profile`,className:\"participant-picture\"},participant.userId);})}),/*#__PURE__*/_jsx(\"div\",{className:\"group-chat-info\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Participants:\"}),\" \",chat.participants.map(p=>{return p.userId===brokerId?'You':p.userDetails.name;}).join(', ')// Join the array of names into a string\n]})}),selectedChat===chat.chatId?/*#__PURE__*/_jsx(\"button\",{className:\"view-group-button\",style:{backgroundColor:'red'},children:\"Selected\"}):/*#__PURE__*/_jsx(\"button\",{className:\"view-group-button\",onClick:()=>submitChoice(chat.chatId),children:\"Choose Group\"})]},chat.chatId);}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"view-group-button\",style:{backgroundColor:'green'},onClick:()=>navigate(`/${roomNumber}/select-chat-profiles`,{state:{groupChat:loc_groupChat,profilesToAdd:loc_profilesToAdd}}),children:\"Create New Group Chat\"})})]});};export default SelectGroupChat;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useLocation","axiosInstance","jwtDecode","jwt_decode","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","SelectGroupChat","_location$state","_location$state2","groupChats","setGroupChats","selectedChat","setSelectedChat","roomNumber","navigate","location","brokerId","localStorage","getItem","loc_groupChat","state","groupChat","loc_profilesToAdd","profilesToAdd","fetchGroups","response","get","data","error","console","submitChoice","style","display","flexDirection","justifyContent","alignItems","children","className","onClick","map","chat","hasMatchingProfile","participants","some","participant","profile","userId","src","profilePicture","alt","name","p","userDetails","join","chatId","backgroundColor"],"sources":["/Users/guusvanrees/Documents/Programming/projects/SET/client/src/components/Brokers/SelectGroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom'; // Import useHistory from react-router-dom\nimport axiosInstance from '../Auth/AxiosInstance'; // Assuming AxiosInstance is set up for authenticated requests\nimport { jwtDecode as jwt_decode } from 'jwt-decode'; // if you want to keep calling it jwt_decode\nimport '../BuyersSellers/styles/ProfilesDisplay.css';\n\nconst API_URL = process.env.REACT_APP_API_URL; // Access the base URL from environment variable\n\nconst SelectGroupChat = () => {\n\n  const [groupChats, setGroupChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const {roomNumber} = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const brokerId = localStorage.getItem('userId'); // Make sure this key matches where you store the user ID\n\n  const loc_groupChat = location.state?.groupChat || \"\";\n  const loc_profilesToAdd = location.state?.profilesToAdd || [];\n\n  useEffect(() => {\n    if (loc_groupChat)\n    {\n        setSelectedChat(loc_groupChat);\n    }\n    \n  }, []);\n\n  const fetchGroups = async () => {\n    try {\n      const response = await axiosInstance.get(`${API_URL}/api/groupchat/groups`);\n      setGroupChats(response.data); // Set messages to state\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroups(); // Initial fetch\n  }, []); // Run effect when groupId changes\n\n  const submitChoice = (groupChat) => {\n    setSelectedChat(groupChat);\n    navigate(`/add-room/${roomNumber}`, { state: { groupChat: groupChat, profilesToAdd: loc_profilesToAdd } });\n  }\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n      <button className='back-button' onClick={() => navigate(`/add-room/${roomNumber}`, {state: {groupChat: selectedChat, profilesToAdd: loc_profilesToAdd}})}>Back</button>\n\n        <div className=\"group-chats-grid\">\n\n    {groupChats.map((chat) => {\n        const hasMatchingProfile = chat.participants.some(participant => \n          loc_profilesToAdd.some(profile => profile === participant.userId)\n        );\n\n        if (hasMatchingProfile) {\n          return (  <div key={chat.chatId} className=\"group-chat-card\">\n                <div className=\"participants-pictures\">\n                {chat.participants.map((participant) => {\n                    return (\n                    <img \n                      key={participant.userId} \n                      src={participant.profile.profilePicture ? `${API_URL}${participant.profile.profilePicture}` : `${API_URL}/uploads/broker.png`}\n                      alt={`${participant.name}'s profile`} \n                      className=\"participant-picture\"\n                    />\n                  );\n                })}\n                \n            \n                </div>\n                <div className=\"group-chat-info\">\n                    <p><strong>Participants:</strong> {\n                        \n                        chat.participants.map(p => {\n                          return p.userId === brokerId ? 'You' : p.userDetails.name;\n                        }).join(', ') // Join the array of names into a string\n                        }\n                        \n                    </p>\n\n                </div>\n                {selectedChat === chat.chatId ? (<button className=\"view-group-button\" style={{backgroundColor: 'red'}}>\n                      Selected\n                  </button> ) : (<button \n                  className=\"view-group-button\" \n                  onClick={() => submitChoice(chat.chatId)}\n                >\n                  Choose Group\n                </button>\n                )}\n              </div>\n\n\n\n          )}})}\n\n          \n\n        </div>\n\n        <div>\n\n                <button \n                            className=\"view-group-button\" \n                            style={{backgroundColor: 'green'}}\n                            onClick={() => navigate(`/${roomNumber}/select-chat-profiles`, {state: {groupChat: loc_groupChat, profilesToAdd: loc_profilesToAdd}})}\n                          >\n                            Create New Group Chat\n\n                          </button>\n          </div>\n    \n    </div>\n    \n  );\n};\n\nexport default SelectGroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}